image: docker:19.03.12
services:
  - docker:19.03.12-dind

stages:
  - test
  - build
  - release
  - deploy

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

test:
  stage: test
  image: python:3.8
  before_script: []
  script:
    - pip install -r requirements.txt
    - pip install -r dev_requirements.txt
    - pytest api/tests --junitxml=report.xml --cov=api
    - coverage xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    reports:
      junit: report.xml
      cobertura: coverage.xml

build:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

release-image:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - main

deploy:
  stage: deploy
  before_script: []
  image:
     name: bitnami/kubectl:latest
     entrypoint: [""]
  environment:
    name: production
    url: http://k8s-yttaapp-yttaappi-09ca915a8c-1517465418.eu-central-1.elb.amazonaws.com/
  script:
    - kubectl config use-context youtube-tag-analyser/infrastructure-management:my-agent
    # using suggestion [here](https://stackoverflow.com/a/54248723) to 'create or update'
    - kubectl -n ytta-app create deployment ytta-app-server --image=$CONTAINER_TEST_IMAGE --replicas=1 --port=8000 --dry-run=client -o yaml | kubectl apply -f -
    - kubectl -n ytta-app rollout status deployment ytta-app-server
  only:
    - main
